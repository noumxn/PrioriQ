
  <h1>{{titley}}</h1>

<div id="error" class="error" hidden>Error</div>
  {{#if error}}
  <div id="serverError" class="error"> {{e}}</div>
  {{/if}}


  {{!--<p>boards yeah! This user has boards</p> --}}

  {{!-- <a href="/boardSettings">Board Settings</a> --}}
    
      <div class="card">
        <h1>To-Do</h1>
      {{#each boardTodo}}
          <div id="todoContainer" class="container1">
                  <p>Name: {{this.taskName}}</p>
                  <p>Deadline: {{this.deadline}}</p>
                  <p>estimated Time: {{this.estimatedTime}}</p>
                  <p>difficulty: {{this.difficulty}}</p>
                  <p>priority: {{this.priority}}</p>
                  <p>description: {{this.description}}</p>
                  <button onclick="deleteTaskNow('{{this._id}}')">Delete Task</button>
                  <button onclick="showUpdateTaskForm('{{this._id}}', '{{this.priority}}', '{{this.difficulty}}')">Update Task</button>
          </div>    
            {{/each}}

      </div>
      

    <div class="card">
        <h1>In Progress</h1>
      {{#each boardProgress}}
          <div class="container1">
                  <p>Name: {{this.taskName}}</p>
                   <p>description: {{this.description}}</p>
          </div>    
            {{/each}}

      </div>

    <div class="card">
        <h1>Done</h1>
      {{#each boardDone}}
          <div class="container1">
                  <p>Name: {{this.taskName}}</p>
                   <p>description: {{this.description}}</p>
          </div>    
            {{/each}}
      </div>

<script src="../public/js/deleteTask.js"></script>
{{!-- js to make form appear --}}
<script>
    function showCreateTaskForm() {
        const createTask = document.getElementById("createTaskForm");
  if (createTask.style.display === "none") {
    createTask.style.display = "block";
  } else {
    createTask.style.display = "none";
  }
}
</script>
{{!-- button to create task --}}
<button onclick="showCreateTaskForm()">Create New Task</button>
<br>

<div id="createTaskForm" style="display:none">
<h2>Create Task</h2>
  <form action = "/boards/{{boardId}}" id="create-task-form" method="POST">
    <label for="taskNameInput">Task Name</label><br>
    <input type="taskName" id="taskNameInput" name="taskNameInput" placeholder="Type task name here"><br>

  {{#if addpriority}} 
    <label for="priorityInput">Priority</label><br>
         <input type="number" id="priorityInput" name="priorityInput" min="1" max="10"><br>
  {{else}} 

    <label for="difficultyInput">Difficulty</label><br>
    <select name="difficultyInput" id="difficultyInput">
       <option value="veryEasy">Very Easy</option>
       <option value="easy">Easy</option>
       <option value="medium">Medium</option>
       <option value="hard">Hard</option>
      <option value="veryHard">Very Hard</option>
    </select><br>

  {{/if}}

    <label for="estimatedTimeInput">Estimated Time</label><br>

     <input type="number" id="estimatedTimeInputH" name="estimatedTimeInputH" min="0" max="100"> hrs 
     <input type="number" id="estimatedTimeInputM" name="estimatedTimeInputM" min="0" max="59"> min <br>

    <label for="deadlineInput">Deadline</label><br>
    <input type="datetime-local" id="deadlineInput" name="deadlineInput"><br>

    <label for="descriptionInput">Description</label><br>
    <input type="description" id="descriptionInput" name="descriptionInput" placeholder="Type description here"><br>

    <label for="assignedToInput">Assigned Users</label><br>
    <p>Type in usernames separated by commas</p>
    <input type="assignedTo" id="assignedToInput" name="assignedToInput" placeholder="Type here"><br>

    <button type="submit" >Submit</button>
</form>
</div>

{{!-- show task form when click button --}}
<script>
    let currentTaskId;
    let addpriority;
    let priority;
    let difficulty;
    let taskId;
    function showUpdateTaskForm(taskId, prior, diffic) {
        console.log("hi");
        if(diffic === "" && prior !== ""){
          addpriority = true;
          difficulty = null;
        }
        else{
          addpriority = false;
          priority = null;
        }
        console.log(addpriority);

        const updateTaskDiv = document.getElementById('updateTaskForm');
        const updateTaskForm = document.getElementById('update-task-form');
        currentTaskId = taskId.toString();
       // updateTaskForm.action = `/boards/update/${currentTaskId}`;
        console.log("task id is", taskId);
        //let taskId = taskId;
  if (updateTaskDiv.style.display === "none") {
    updateTaskDiv.style.display = "block";
  } else {
    updateTaskDiv.style.display = "none";
  }
  }

  function updateIt(){

    console.log("new", currentTaskId);
    let taskName = document.getElementById("newtaskNameInput").value;
    let priority;
    let difficulty;
  
    console.log("addPrio is" , addpriority);
    if(addpriority == true){
    priority = document.getElementById("newPriorityInput").value;
    console.log(priority);
  }
  else{
    difficulty = document.getElementById("newdifficultyInput").value;
  }
     

    let estimatedTimeH = document.getElementById("newEstimatedTimeInputH").value;
    let estimatedTimeM = document.getElementById("newEstimatedTimeInputM").value;
    const deadline = document.getElementById("newDeadlineInput").value;
    const description = document.getElementById("newDescriptionInput").value;
    const assignedTo = document.getElementById("newAssignedToInput").value;


    let updateFormData = {
      taskId: currentTaskId,
      taskName: taskName,
      priority: priority,
      difficulty: difficulty,
      estimatedTimeH: estimatedTimeH,
      estimatedTimeM: estimatedTimeM,
      deadline: deadline,
      description: description,
      assignedTo: assignedTo
    };
    

    const url = "/boards/update/" + currentTaskId ;
    console.log(url);

        $.ajax({
        type: "PATCH",
        url: url,
        data: updateFormData,
        success: function(data) {
            location.reload();
        },
        error: function(err) {
            console.log(err);
        }
    })
/*
        fetch(url, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(updateFormData),
    })
    .then(response => response.json())
    .catch(error => {
        console.log(error);
    });
    */

    //let taskName = upTaskForm.newtaskNameInput.value.toString();


    //let taskName = upTaskForm.newtaskNameInput.value.toString();

    //let taskName = .get('newTaskNameInput');


    

  }
/*
  let updateForm = document.getElementById('update-task-form');
  
      updateForm.addEventListener('submit', function(event){

       event.preventDefault();
       
       cos
      //const formData = new FormData(this);

      

    const priority = formData.get('newPriorityInput');
    const estimatedTimeH = formData.get('newEstimatedTimeInputH');
    const estimatedTimeM = formData.get('newEstimatedTimeInputM');
    const deadline = formData.get('newDeadlineInput');
    const description = formData.get('newDescriptionInput');
    const assignedTo = formData.get('newAssignedToInput');

    const data = {
      taskName: taskName,
      priority: priority,
      estimatedTimeH: estimatedTimeH,
      estimatedTimeM: estimatedTimeM,
      deadline: deadline,
      description: description,
      assignedTo: assignedTo
    }

    fetch(url, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
    })
    .then(response => response.json())
    .catch(error => {
        console.log(error);
    });
*/

</script>

{{!-- form for updating task --}}
<div id="updateTaskForm" style="display:none">
<h2>Update Task</h2>
  <form id="upTaskForm"   method="PATCH">
    <label for="newtaskNameInput">Task Name</label><br>
    <input type="taskName" id="newtaskNameInput" name="newtaskNameInput" placeholder="New task name here"><br>

  {{#if addpriority}} 
    <label for="newPriorityInput">Priority</label><br>
         <input type="number" id="newPriorityInput" name="newPriorityInput" min="1" max="10"><br>
  {{else}} 

    <label for="newDifficultyInput">Difficulty</label><br>
    <select name="newDifficultyInput" id="newDifficultyInput">
       <option value="veryEasy">Very Easy</option>
       <option value="easy">Easy</option>
       <option value="medium">Medium</option>
       <option value="hard">Hard</option>
      <option value="veryHard">Very Hard</option>
    </select><br>

  {{/if}}

    <label for="newEstimatedTimeInput">Estimated Time</label><br>

     <input type="number" id="newEstimatedTimeInputH" name="newEstimatedTimeInputH" min="0" max="100"> hrs 
     <input type="number" id="newEstimatedTimeInputM" name="newEstimatedTimeInputM" min="0" max="59"> min <br>

    <label for="newDeadlineInput">Deadline</label><br>
    <input type="datetime-local" id="newDeadlineInput" name="newDeadlineInput"><br>

    <label for="newDescriptionInput">Description</label><br>
    <input type="description" id="newDescriptionInput" name="newDescriptionInput" placeholder="New description here"><br>

    <label for="newAssignedToInput">Assigned Users</label><br>
    <p>Type in usernames separated by commas</p>
    <input type="assignedTo" id="newAssignedToInput" name="newAssignedToInput" placeholder="Type here"><br>

    <button id="update-task-btn" onclick="updateIt()" type="button">Submit</button>
</form>
</div>
      
      
    