<h1>{{titley}}</h1>
<h3>Board ID: {{boardId}}</h3>

<div id="errorDiv" class="error" hidden>Error</div>
{{#if error}}
<div id="serverError" class="error"> {{e}}</div>
{{/if}}


{{!--<p>boards yeah! This user has boards</p> --}}

{{!-- <a href="/boardSettings">Board Settings</a> --}}

<div class="card" ondrop="drop(event, 'todo')" ondragover="allowDrop(event)">
  <h1>To-Do</h1>
  {{#each boardTodo}}
  <div id="{{this._id}}" class="container" draggable="true" ondragstart="drag(event)" data-task-id="{{this._id}}">
    <p>Name: {{this.taskName}}</p>
    <p>Deadline: {{this.deadline}}</p>
    <p>Estimated Time: {{this.estimatedTime}}</p>
    {{#if ../addpriority}}
    <p>Priority: {{this.priority}}</p>
    {{else}}
    <p>Difficulty: {{this.difficulty}}</p>
    {{/if}}
    <p>Description: {{this.description}}</p>
    <p>Assigned To: {{this.assignedTo}}</p>
    <button onclick="deleteTaskNow('{{this._id}}')">Delete Task</button>
    <button onclick="showUpdateTaskForm('{{this._id}}', '{{this.priority}}', '{{this.difficulty}}')">Update
      Task</button>
    <button onclick="addTaskToCheckList('{{this._id}}')">Add To Checklist</button>
  </div>
  {{/each}}

</div>


<div class="card" ondrop="drop(event, 'inprogress')" ondragover="allowDrop(event)">
  <h1>In Progress</h1>
  {{#each boardProgress}}
  <div id="{{this._id}}" class="container" draggable="true" ondragstart="drag(event)" data-task-id="{{this._id}}">
    <p>Name: {{this.taskName}}</p>
    <p>Deadline: {{this.deadline}}</p>
    <p>Estimated Time: {{this.estimatedTime}}</p>
    {{#if ../addpriority}}
    <p>Priority: {{this.priority}}</p>
    {{else}}
    <p>Difficulty: {{this.difficulty}}</p>
    {{/if}}
    <p>Description: {{this.description}}</p>
    <p>Assigned To: {{this.assignedTo}}</p>
    <button onclick="deleteTaskNow('{{this._id}}')">Delete Task</button>
    <button onclick="showUpdateTaskForm('{{this._id}}', '{{this.priority}}', '{{this.difficulty}}')">Update
      Task</button>
    <button onclick="addTaskToCheckList('{{this._id}}')">Add To Checklist</button>
  </div>
  {{/each}}

</div>

<div class="card" ondrop="drop(event, 'done')" ondragover="allowDrop(event)">
  <h1>Done</h1>
  {{#each boardDone}}
  <div id="{{this._id}}" class="container" draggable="true" ondragstart="drag(event)" data-task-id="{{this._id}}">
    <p>Name: {{this.taskName}}</p>
    <p>Deadline: {{this.deadline}}</p>
    <p>Estimated Time: {{this.estimatedTime}}</p>
    {{#if ../addpriority}}
    <p>Priority: {{this.priority}}</p>
    {{else}}
    <p>Difficulty: {{this.difficulty}}</p>
    {{/if}}
    <p>Description: {{this.description}}</p>
    <p>Assigned To: {{this.assignedTo}}</p>
    <button onclick="deleteTaskNow('{{this._id}}')">Delete Task</button>
    <button onclick="showUpdateTaskForm('{{this._id}}', '{{this.priority}}', '{{this.difficulty}}')">Update
      Task</button>
    <button onclick="addTaskToCheckList('{{this._id}}')">Add To Checklist</button>
  </div>
  {{/each}}
</div>
<script src="../public/js/taskToChecklist.js"></script>
<script src="../public/js/dragAndDrop.js"></script>
<script src="../public/js/deleteTask.js"></script>

{{!-- js to make form appear --}}
<script>
  function showCreateTaskForm() {
    const createTask = document.getElementById("createTaskForm");
    if (createTask.style.display === "none") {
      createTask.style.display = "block";
    } else {
      createTask.style.display = "none";
    }
  }
</script>
{{!-- button to create task --}}
<button onclick="showCreateTaskForm()">Create New Task</button>
<br>

<div id="createTaskForm" style="display:none">
  <h2>Create Task</h2>
  <form action="/boards/{{boardId}}" id="create-task-form" method="POST">
    <label for="taskNameInput">Task Name</label><br>
    <input type="text" id="taskNameInput" name="taskNameInput" placeholder="Type task name here"><br>

    {{#if addpriority}}
    <label for="priorityInput">Priority</label><br>
    <input type="number" id="priorityInput" name="priorityInput" min="1" max="10"><br>
    {{else}}

    <label for="difficultyInput">Difficulty</label><br>
    <select name="difficultyInput" id="difficultyInput">
      <option value="veryEasy">Very Easy</option>
      <option value="easy">Easy</option>
      <option value="medium">Medium</option>
      <option value="hard">Hard</option>
      <option value="veryHard">Very Hard</option>
    </select><br>

    {{/if}}

    <label for="estimatedTimeInputH">Estimated Time</label><br>

    <input type="number" id="estimatedTimeInputH" name="estimatedTimeInputH" min="0" max="100"> hrs
    <input type="number" id="estimatedTimeInputM" name="estimatedTimeInputM" min="0" max="59"> min <br>

    <label for="deadlineInput">Deadline</label><br>
    <input type="datetime-local" id="deadlineInput" name="deadlineInput"><br>

    <label for="descriptionInput">Description</label><br>
    <input type="text" id="descriptionInput" name="descriptionInput" placeholder="Type description here"><br>

    <label for="assignedToInput">Assigned Users</label><br>
    <p>Type in usernames separated by commas</p>
    <input type="text" id="assignedToInput" name="assignedToInput" placeholder="Type here"><br>

    <button type="submit">Submit</button>
  </form>
</div>
<script src="/public/js/createTask.js"></script>

{{!-- show task form when click button --}}
<script>
  let currentTaskId;
  let addpriority;
  let priority;
  let difficulty;
  let taskId;
  function showUpdateTaskForm(taskId, prior, diffic) {
    console.log("hi");
    if (diffic === "" && prior !== "") {
      addpriority = true;
      difficulty = null;
    }
    else {
      addpriority = false;
      priority = null;
    }
    console.log(addpriority);

    const updateTaskDiv = document.getElementById('updateTaskForm');
    const updateTaskForm = document.getElementById('update-task-form');
    currentTaskId = taskId.toString();
    console.log("task id is", taskId);
    if (updateTaskDiv.style.display === "none") {
      updateTaskDiv.style.display = "block";
    } else {
      updateTaskDiv.style.display = "none";
    }
  }

  function checkParams() {
    let tName = document.getElementById("newtaskNameInput");
    let err = document.getElementById("error");
    let priority;
    let difficulty;
    if (addpriority == true) {
      priority = document.getElementById("newPriorityInput");
      console.log(priority);
    }
    else {
      difficulty = document.getElementById("newDifficultyInput");
    }
    let estimatedTimeH = document.getElementById("newEstimatedTimeInputH");
    let estimatedTimeM = document.getElementById("newEstimatedTimeInputM");
    const deadline = document.getElementById("newDeadlineInput");
    const description = document.getElementById("newDescriptionInput");
    const assignedTo = document.getElementById("newAssignedToInput");
    let updateForm = document.getElementById('upTaskForm');
    if(updateForm){
      console.log("form found")
      if(tName.value.trim().length == 0){
        tName.focus();
        err.innerHTML = "Please input a new task name (Can be the same as original name)";
        return false;
      }
      if(tName.value.trim().length > 30){
        tName.focus();
        err.innerHTML = "New Task Name must be a string no longer than 30 characters";
        return false;
      }
      if(addpriority == true){
        let prio = parseInt(priority.value);
        if(isNaN(prio)){
          priority.focus();
          err.innerHTML = `Please input a number for priority`;
          return false;
        }
        if(prio < 1 || prio > 10){
          priority.focus();
          err.innerHTML = `Priority must be between 1 and 10`;
          return false;
        }
      }else{
        if(difficulty.value !== "veryEasy" &&
            difficulty.value !== "easy" &&
            difficulty.value !== "medium" &&
            difficulty.value !== "hard" &&
            difficulty.value !== "veryHard"){
          difficulty.focus();
          err.innerHTML = `Difficulty must be one of the following values: "veryEasy", "easy", "medium", "hard", "veryHard"`;
          return false;
        }
      }
    let numTimeH = parseInt(estimatedTimeH.value);
    let numTimeM = parseInt(estimatedTimeM.value);
    if(isNaN(numTimeH)){
      estimatedTimeH.focus();
      err.innerHTML = `Please input a number value for Estimated time (Hours)`;
      return false;
    }
    if(isNaN(numTimeM)){
      estimatedTimeM.focus();
      err.innerHTML = `Please input a number value for Estimated time (mins)`;
      return false;
    }
    if(numTimeH < 0 || numTimeH > 100){
      estimatedTimeH.focus();
      err.innerHTML = `Estimated Time must be between 0 and 100 hours`;
      return false;
    }
    if(numTimeM < 0 || numTimeM > 59){
      estimatedTimeM.focus();
      err.innerHTML = `Estimated Time must be between 0 and 59 minutes`;
      return false;
    }
    if(deadline.value.length == 0){
      deadline.focus();
      err.innerHTML = `Please input a value for new Deadline`
      return false;
    }
    let regex = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}$/;
    if(!regex.test(deadline.value)){
      deadline.focus();
      err.innerHTML = `Deadline needs to be in the the format: YYYY-MM-DDTHH:MM`
      return false;
    }
    if(description.value.trim().length == 0){
      description.focus();
      err.innerHTML = `Please input a value for new Description`;
      return false;
    }
    if(description.value.trim().length > 100 ){
      description.focus();
      err.innerHTML = `Description cannot be longer than 100 characters`;
      return false;
    }
    err.hidden = true;
    return true;

  }
  }

  function updateIt() {

    let taskName = document.getElementById("newtaskNameInput").value;
    if(checkParams()){
    
    let priority;
    let difficulty;

    if (addpriority === true) {
      priority = document.getElementById("newPriorityInput").value;
      console.log(priority);
    }
    else {
      difficulty = document.getElementById("newDifficultyInput").value;
    }


    let estimatedTimeH = document.getElementById("newEstimatedTimeInputH").value;
    let estimatedTimeM = document.getElementById("newEstimatedTimeInputM").value;
    const deadline = document.getElementById("newDeadlineInput").value;
    const description = document.getElementById("newDescriptionInput").value;
    const assignedTo = document.getElementById("newAssignedToInput").value;


    let updateFormData = {
      taskId: currentTaskId,
      taskName: taskName,
      priority: priority,
      difficulty: difficulty,
      estimatedTimeH: estimatedTimeH,
      estimatedTimeM: estimatedTimeM,
      deadline: deadline,
      description: description,
      assignedTo: assignedTo
    };


    const url = "/boards/update/" + currentTaskId;
    console.log(url);

    $.ajax({
      type: "POST",
      url: url,
      data: updateFormData,
      success: function (data) {
        location.reload();
      },
      error: function (err) {
        console.log(err);
      }
    })
  }
  }

</script>

{{!-- form for updating task --}}
<div id="updateTaskForm" style="display:none">
  <h2>Update Task</h2>
  <form id="upTaskForm" method="POST">
    <label for="newtaskNameInput">Task Name</label><br>
    <input type="text" id="newtaskNameInput" name="newtaskNameInput" placeholder="New task name here"><br>

    {{#if addpriority}}
    <label for="newPriorityInput">Priority</label><br>
    <input type="number" id="newPriorityInput" name="newPriorityInput" min="1" max="10"><br>
    {{else}}

    <label for="newDifficultyInput">Difficulty</label><br>
    <select name="newDifficultyInput" id="newDifficultyInput">
      <option value="veryEasy">Very Easy</option>
      <option value="easy">Easy</option>
      <option value="medium">Medium</option>
      <option value="hard">Hard</option>
      <option value="veryHard">Very Hard</option>
    </select><br>

    {{/if}}

    <label for="newEstimatedTimeInputH">Estimated Time</label><br>

    <input type="number" id="newEstimatedTimeInputH" name="newEstimatedTimeInputH" min="0" max="100"> hrs
    <input type="number" id="newEstimatedTimeInputM" name="newEstimatedTimeInputM" min="0" max="59"> min <br>

    <label for="newDeadlineInput">Deadline</label><br>
    <input type="datetime-local" id="newDeadlineInput" name="newDeadlineInput"><br>

    <label for="newDescriptionInput">Description</label><br>
    <input type="text" id="newDescriptionInput" name="newDescriptionInput" placeholder="New description here"><br>

    <label for="newAssignedToInput">Assigned Users</label><br>
    <p>Type in usernames separated by commas</p>
    <input type="text" id="newAssignedToInput" name="newAssignedToInput" placeholder="Type here"><br>

    <button id="update-task-btn" onclick="updateIt()" type="button">Submit</button>
  </form>
</div>
<a href="/boardsettings/{{boardId}}">Click here to edit the board settings</a>
<br>
<a href="/homepage">Back to homepage</a>